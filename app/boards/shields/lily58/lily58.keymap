/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DFLT    0
#define BT      1
#define NAV     2
#define MAG     3

#define AS(CODE) &as_##CODE CODE CODE  // Autoshift

#define DEFINE_SHIFT_MACRO(CODE) \
/ { \
	macros { \
		ZMK_MACRO( \
			shift_##CODE, \
			wait-ms = <0>; \
			tap-ms = <0>; \
			bindings = <&macro_tap &kp LS(CODE)>; \
		) \
	}; \
};

// Define the macros needed for autoshifting
DEFINE_SHIFT_MACRO(GRAVE) \
DEFINE_SHIFT_MACRO(N1) \
DEFINE_SHIFT_MACRO(N2) \
DEFINE_SHIFT_MACRO(N3) \
DEFINE_SHIFT_MACRO(N4) \
DEFINE_SHIFT_MACRO(N5) \
DEFINE_SHIFT_MACRO(N6) \
DEFINE_SHIFT_MACRO(N7) \
DEFINE_SHIFT_MACRO(N8) \
DEFINE_SHIFT_MACRO(N9) \
DEFINE_SHIFT_MACRO(N0) \
DEFINE_SHIFT_MACRO(MINUS) \
DEFINE_SHIFT_MACRO(EQUAL) \
DEFINE_SHIFT_MACRO(Q) \
DEFINE_SHIFT_MACRO(W) \
DEFINE_SHIFT_MACRO(E) \
DEFINE_SHIFT_MACRO(R) \
DEFINE_SHIFT_MACRO(T) \
DEFINE_SHIFT_MACRO(SQT) \
DEFINE_SHIFT_MACRO(Y) \
DEFINE_SHIFT_MACRO(U) \
DEFINE_SHIFT_MACRO(I) \
DEFINE_SHIFT_MACRO(O) \
DEFINE_SHIFT_MACRO(P) \
DEFINE_SHIFT_MACRO(A) \
DEFINE_SHIFT_MACRO(S) \
DEFINE_SHIFT_MACRO(D) \
DEFINE_SHIFT_MACRO(F) \
DEFINE_SHIFT_MACRO(G) \
DEFINE_SHIFT_MACRO(LBKT) \
DEFINE_SHIFT_MACRO(RBKT) \
DEFINE_SHIFT_MACRO(H) \
DEFINE_SHIFT_MACRO(J) \
DEFINE_SHIFT_MACRO(K) \
DEFINE_SHIFT_MACRO(L) \
DEFINE_SHIFT_MACRO(SEMI) \
DEFINE_SHIFT_MACRO(Z) \
DEFINE_SHIFT_MACRO(X) \
DEFINE_SHIFT_MACRO(C) \
DEFINE_SHIFT_MACRO(V) \
DEFINE_SHIFT_MACRO(B) \
DEFINE_SHIFT_MACRO(N) \
DEFINE_SHIFT_MACRO(M) \
DEFINE_SHIFT_MACRO(COMMA) \
DEFINE_SHIFT_MACRO(DOT) \
DEFINE_SHIFT_MACRO(SLASH) \
DEFINE_SHIFT_MACRO(BSLH) \
DEFINE_SHIFT_MACRO(FSLH)

/ {
    behaviors {

    	as_GRAVE: autoshift_GRAVE {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_GRAVE>, <&kp>;
		};
		as_N1: autoshift_N1 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N1>, <&kp>;
		};
		as_N2: autoshift_N2 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N2>, <&kp>;
		};
		as_N3: autoshift_N3 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N3>, <&kp>;
		};
		as_N4: autoshift_N4 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N4>, <&kp>;
		};
		as_N5: autoshift_N5 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N5>, <&kp>;
		};
		as_N6: autoshift_N6 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N6>, <&kp>;
		};
		as_N7: autoshift_N7 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N7>, <&kp>;
		};
		as_N8: autoshift_N8 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N8>, <&kp>;
		};
		as_N9: autoshift_N9 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N9>, <&kp>;
		};
		as_N0: autoshift_N0 {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N0>, <&kp>;
		};
		as_MINUS: autoshift_MINUS {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_MINUS>, <&kp>;
		};
		as_EQUAL: autoshift_EQUAL {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_EQUAL>, <&kp>;
		};
		as_Q: autoshift_Q {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_Q>, <&kp>;
		};
		as_W: autoshift_W {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_W>, <&kp>;
		};
		as_E: autoshift_E {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_E>, <&kp>;
		};
		as_R: autoshift_R {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_R>, <&kp>;
		};
		as_T: autoshift_T {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_T>, <&kp>;
		};
		as_SQT: autoshift_SQT {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_SQT>, <&kp>;
		};
		as_Y: autoshift_Y {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_Y>, <&kp>;
		};
		as_U: autoshift_U {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_U>, <&kp>;
		};
		as_I: autoshift_I {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_I>, <&kp>;
		};
		as_O: autoshift_O {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_O>, <&kp>;
		};
		as_P: autoshift_P {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_P>, <&kp>;
		};
		as_A: autoshift_A {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_A>, <&kp>;
		};
		as_S: autoshift_S {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_S>, <&kp>;
		};
		as_D: autoshift_D {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_D>, <&kp>;
		};
		as_F: autoshift_F {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_F>, <&kp>;
		};
		as_G: autoshift_G {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_G>, <&kp>;
		};
		as_LBKT: autoshift_LBKT {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_LBKT>, <&kp>;
		};
		as_RBKT: autoshift_RBKT {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_RBKT>, <&kp>;
		};
		as_H: autoshift_H {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_H>, <&kp>;
		};
		as_J: autoshift_J {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_J>, <&kp>;
		};
		as_K: autoshift_K {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_K>, <&kp>;
		};
		as_L: autoshift_L {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_L>, <&kp>;
		};
		as_SEMI: autoshift_SEMI {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_SEMI>, <&kp>;
		};
		as_Z: autoshift_Z {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_Z>, <&kp>;
		};
		as_X: autoshift_X {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_X>, <&kp>;
		};
		as_C: autoshift_C {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_C>, <&kp>;
		};
		as_V: autoshift_V {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_V>, <&kp>;
		};
		as_B: autoshift_B {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_B>, <&kp>;
		};
		as_N: autoshift_N {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_N>, <&kp>;
		};
		as_M: autoshift_M {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_M>, <&kp>;
		};
		as_COMMA: autoshift_COMMA {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_COMMA>, <&kp>;
		};
		as_DOT: autoshift_DOT {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_DOT>, <&kp>;
		};
		as_SLASH: autoshift_SLASH {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_SLASH>, <&kp>;
		};
		as_BSLH: autoshift_BSLH {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_BSLH>, <&kp>;
		};

        as_FSLH: autoshift_FSLH {
			compatible = "zmk,behavior-hold-tap";
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <300>;
			#binding-cells = <2>;
			bindings = <&shift_FSLH>, <&kp>;
		};

		// tap-hold where the hold is 
		th: tap_hold {
			compatible = "zmk,behavior-hold-tap";
			flavor = "hold-preferred";
			tapping-term-ms = <100>;
			#binding-cells = <2>;
			bindings = <&kp>, <&kp>;
		};
	};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
// ------------------------------------------------------------------------------------------------------------
// |   1   |  2  |  3  |  4   |  5   |  6    |                   |  7   |  8    |  9    |  0   |   -   |   =   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T    |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  ESC  |  A  |  S  |  D   |  F   |  G    |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B    |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | CTRL | ALT  | SPACE |  GUI   |  |  NAV  | BSPC | MAG   | BT    |
            bindings = <
AS(    N1 ) AS( N2 ) AS( N3 ) AS(    N4 ) AS(   N5 ) AS(    N6 )                       AS(  N7 ) AS(  N8 ) AS(    N9 ) AS(  N0 ) AS( MINUS ) AS( EQUAL )
&kp   TAB   AS(  Q ) AS(  W ) AS(     E ) AS(    R ) AS(     T )                       AS(   Y ) AS(   U ) AS(     I ) AS(   O ) AS(     P ) AS(  BSLH )
&kp   ESC   AS(  A ) AS(  S ) AS(     D ) AS(    F ) AS(     G )                       AS(   H ) AS(   J ) AS(     K ) AS(   L ) AS(  SEMI ) AS(   SQT )
&kp LSHFT   AS(  Z ) AS(  X ) AS(     C ) AS(    V ) AS(     B ) AS( LBKT ) AS( RBKT ) AS(   N )  AS(  M ) AS( COMMA ) AS( DOT ) AS(  FSLH ) &kp   RET 

                &kp LCTRL &kp LALT &kp SPACE &mt LGUI LG(SPACE)  &mo NAV &kp BSPC &mo MAG &mo BT
            >;
        };

        bluetooth_layer {
            display-name = "Bluetooth";
            bindings = <
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5                    &trans     &trans       &trans       &trans     &ext_power EP_OFF &ext_power EP_ON
&trans       &trans       &trans       &trans       &trans       &trans                          &trans     &trans       &trans       &trans     &trans            &trans
&soft_off    &trans       &trans       &trans       &trans       &trans                          &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV &trans            &trans
&trans       &trans       &trans       &trans       &trans       &trans        &trans &trans     &trans     &kp C_MUTE   &trans       &trans     &trans            &trans
                                                        &trans &trans &kp C_PP &trans &trans &bt BT_CLR &trans &trans
            >;
        };

        navigation_layer {
            display-name = "Navigation";
            bindings = <
&trans      &trans &trans &trans &trans &trans               &trans   &trans   &trans &trans    &trans &trans
&trans      &trans &trans &trans &trans &trans               &trans   &trans   &trans &trans    &trans &trans
AS( GRAVE ) &trans &trans &trans &trans &trans               &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
&trans      &trans &trans &trans &trans &trans &trans &trans &trans   &trans   &trans &trans    &trans &trans
                             &trans &trans &trans &trans &kp LC(LALT)   &trans
            >;
        };

        magnet_layer {
            display-name = "Magnet";
            bindings = <
&trans &trans &trans &trans         &trans         &trans                         &trans           &trans           &trans         &trans            &trans &trans
&trans &trans &trans &kp LC(LA(E))  &trans         &kp LC(LA(T))                  &trans           &trans           &trans         &trans            &trans &trans
&trans &trans &trans &kp LC(LA(D))  &kp LC(LA(F))  &kp LC(LA(G))                  &kp LC(LA(LEFT)) &kp LC(LA(DOWN)) &kp LC(LA(UP)) &kp LC(LA(RIGHT)) &trans &trans
&trans &trans &trans &kp LC(LA(C))  &trans         &trans         &trans  &trans  &trans           &trans           &trans         &trans            &trans &kp LC(LA(RET))
                                                   &trans  &trans &trans  &trans  &kp LC(LALT)     &trans
            >;
        };
    };
};
